{"ast":null,"code":"import _asyncToGenerator from\"/home/myo/Desktop/javascript/R_eact/to_do_lists/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/myo/Desktop/javascript/R_eact/to_do_lists/client/node_modules/@babel/runtime/regenerator/index.js\";import{createAsyncThunk,createEntityAdapter,createSelector,createSlice}from\"@reduxjs/toolkit\";import{fetchPost,postData,deleteData,updateData,allComplete,allUnComplete,clearComplete}from\"../../api/api\";export var generateId=function generateId(state){var arr=state.todos.ids;return arr.length-1>=0?arr[arr.length-1]+1:0;};export var fetchTodos=createAsyncThunk('todo/fetchTodos',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchPost();case 2:data=_context.sent;return _context.abrupt(\"return\",data);case 4:case\"end\":return _context.stop();}}},_callee);})));export var todoAdd=createAsyncThunk('todo/todoAdd',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(text){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return postData({description:text});case 2:data=_context2.sent;return _context2.abrupt(\"return\",data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}());export var todoDelete=createAsyncThunk('todo/todoDelete',/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return deleteData({_id:id});case 2:return _context3.abrupt(\"return\",id);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}());export var todoComplete=createAsyncThunk('todo/todoComplete',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(datas){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return updateData({_id:datas._id,completed:datas.changes.completed});case 2:return _context4.abrupt(\"return\",{id:datas._id,changes:{completed:datas.changes.completed}});case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x3){return _ref4.apply(this,arguments);};}());export var todoAllComplete=createAsyncThunk('todo/todoAllComplete',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return allComplete();case 2:data=_context5.sent;return _context5.abrupt(\"return\",data);case 4:case\"end\":return _context5.stop();}}},_callee5);})));export var todoAllUnComplete=createAsyncThunk('todo/todoAllUnComplete',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return allUnComplete();case 2:data=_context6.sent;return _context6.abrupt(\"return\",data);case 4:case\"end\":return _context6.stop();}}},_callee6);})));export var todoClearComplete=createAsyncThunk('todo/todoClearComplete',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return clearComplete();case 2:data=_context7.sent;return _context7.abrupt(\"return\",data);case 4:case\"end\":return _context7.stop();}}},_callee7);})));export var todoSelect=createAsyncThunk('todo/todoSelect',/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(datas){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return updateData({_id:datas._id,color:datas.changes.color});case 2:return _context8.abrupt(\"return\",{id:datas._id,changes:{color:datas.changes.color}});case 3:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x4){return _ref8.apply(this,arguments);};}());var todoAdapter=createEntityAdapter({selectId:function selectId(data){return data._id;}});var initialState=todoAdapter.getInitialState({open:false});var todoSlice=createSlice({name:'todo',initialState:initialState,reducers:{todoDeleteSnack:function todoDeleteSnack(state,action){state.open=action.payload;}// todoAdd: {\n//     reducer: (state, action) => {\n//          todoAdapter.addOne(state, action.payload)\n//     },\n//     prepare: (id, description) => {\n//         return {payload:{id: id, complete: false, description: description, color: ''}}\n//     }\n// },\n// todoComplete: (state, action) => {\n//     todoAdapter.updateOne(state, action.payload)\n// },\n// todoDelete: (state, action) => {\n//     todoAdapter.removeOne(state, action.payload)\n// },\n// todoAllComplete: (state, action) => {\n//     const update_arr = state.ids.map((id) => {\n//             return {id: id, changes: {complete: true}}\n//         })\n//     todoAdapter.updateMany(state, update_arr)\n// },\n// todoClearComplete: (state, action) => {\n//     const completeTodoArray = Object.values(state.entities).filter((todo) => todo.complete);\n//     const completeIds = completeTodoArray.map(todo => todo.id);\n//     todoAdapter.removeMany(state, completeIds);\n// },\n// todoSelect: (state, action) => {\n//     todoAdapter.updateOne(state, action.payload);\n// },\n// todoAllUnComplete: (state, action) => {\n//     const update_arr = state.ids.map((id) => {\n//         return {id: id, changes: {complete: false}}\n//     })\n//     todoAdapter.updateMany(state, update_arr)\n// }\n},extraReducers:function extraReducers(builder){builder.addCase(fetchTodos.fulfilled,todoAdapter.setAll).addCase(todoAdd.fulfilled,function(state,action){todoAdapter.addOne(state,action.payload);}).addCase(todoDelete.fulfilled,function(state,action){state.open=true;todoAdapter.removeOne(state,action.payload);}).addCase(todoComplete.fulfilled,todoAdapter.updateOne).addCase(todoAllComplete.fulfilled,function(state,action){var update_arr=state.ids.map(function(id){return{id:id,changes:{completed:true}};});todoAdapter.updateMany(state,update_arr);}).addCase(todoAllUnComplete.fulfilled,function(state,action){var update_arr=state.ids.map(function(id){return{id:id,changes:{completed:false}};});todoAdapter.updateMany(state,update_arr);}).addCase(todoClearComplete.fulfilled,function(state,action){var completeTodoArray=Object.values(state.entities).filter(function(todo){return todo.completed;});var completeIds=completeTodoArray.map(function(todo){return todo._id;});todoAdapter.removeMany(state,completeIds);}).addCase(todoSelect.fulfilled,todoAdapter.updateOne);}});var todoDeleteSnack=todoSlice.actions.todoDeleteSnack;export{todoDeleteSnack};export default todoSlice.reducer;var _todoAdapter$getSelec=todoAdapter.getSelectors(function(state){return state.todos;}),selectAll=_todoAdapter$getSelec.selectAll,selectById=_todoAdapter$getSelec.selectById;export{selectAll,selectById};export var selectFilterIds=createSelector(function(state){return state;},function(state){if(state.filters.status===\"All\"&&state.filters.colors.length===0){return selectTodoIds(state);}else if(state.filters.status===\"UnComplete\"){var arr=selectAll(state).filter(function(item){return!item.completed&&(state.filters.colors.length===0||state.filters.colors.includes(item.color));});return arr.map(function(item){return item._id;});}else if(state.filters.status===\"Complete\"){var _arr=selectAll(state).filter(function(item){return item.completed&&(state.filters.colors.length===0||state.filters.colors.includes(item.color));});return _arr.map(function(item){return item._id;});}else{var _arr2=selectAll(state).filter(function(item){return state.filters.colors.includes(item.color);});return _arr2.map(function(item){return item._id;});}});export var selectTodoIds=createSelector(selectAll,function(state){return state.map(function(item){return item._id;});});export var selectUnComplete=createSelector(selectAll,function(state){return state.filter(function(state){return!state.completed;});});// export const selectTodoDeleteSnack = createSelector(\n//     (state) => state.todos,\n//     state => state.open\n//  )\nexport var selectTodoDeleteSnack=function selectTodoDeleteSnack(state){return state.todos.open;};","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/to_do_lists/client/src/features/Todo/todoSlice.js"],"names":["createAsyncThunk","createEntityAdapter","createSelector","createSlice","fetchPost","postData","deleteData","updateData","allComplete","allUnComplete","clearComplete","generateId","state","arr","todos","ids","length","fetchTodos","data","todoAdd","text","description","todoDelete","id","_id","todoComplete","datas","completed","changes","todoAllComplete","todoAllUnComplete","todoClearComplete","todoSelect","color","todoAdapter","selectId","initialState","getInitialState","open","todoSlice","name","reducers","todoDeleteSnack","action","payload","extraReducers","builder","addCase","fulfilled","setAll","addOne","removeOne","updateOne","update_arr","map","updateMany","completeTodoArray","Object","values","entities","filter","todo","completeIds","removeMany","actions","reducer","getSelectors","selectAll","selectById","selectFilterIds","filters","status","colors","selectTodoIds","item","includes","selectUnComplete","selectTodoDeleteSnack"],"mappings":"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","sourcesContent":["\nimport { createAsyncThunk, createEntityAdapter, createSelector, createSlice, } from \"@reduxjs/toolkit\";\nimport { fetchPost, postData, deleteData, updateData, allComplete, allUnComplete, clearComplete } from \"../../api/api\";\n\n\nexport const generateId = (state)=> {\n    const arr = state.todos.ids;\n    return arr.length-1>=0?arr[arr.length-1]+1:0\n    \n}\n\nexport const fetchTodos = createAsyncThunk('todo/fetchTodos', async () => {\n  const data =  await fetchPost();\n  return data;\n});\n\n\n\nexport const todoAdd = createAsyncThunk('todo/todoAdd', async (text) => {\n    \n    const data = await postData({description: text});\n    return data;\n\n});\n\nexport const todoDelete = createAsyncThunk('todo/todoDelete', async (id) => {\n    await deleteData({_id: id});\n    return id;\n});\n\nexport const todoComplete = createAsyncThunk('todo/todoComplete', async (datas) => {\n    await updateData({_id: datas._id, completed: datas.changes.completed});\n    return {id: datas._id, changes:{completed: datas.changes.completed}};\n    \n})\n\nexport const todoAllComplete = createAsyncThunk('todo/todoAllComplete',async () => {\n    const data = await allComplete();\n    return data;\n})\n\nexport const todoAllUnComplete = createAsyncThunk('todo/todoAllUnComplete',async () => {\n    const data = await allUnComplete();\n    return data;\n})\n\nexport const todoClearComplete = createAsyncThunk('todo/todoClearComplete', async () => {\n    const data = await clearComplete();\n    return data;\n})\n\nexport const todoSelect = createAsyncThunk('todo/todoSelect', async (datas) => {\n\n    \n    await updateData({_id:datas._id, color:datas.changes.color});\n    return {id:datas._id, changes:{color: datas.changes.color}}\n} )\n\nconst todoAdapter = createEntityAdapter({\n    selectId: (data) => data._id,\n   \n});\n\n\n\nconst initialState = todoAdapter.getInitialState({open:false});\n\nconst todoSlice = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        todoDeleteSnack: (state, action) => {\n            state.open = action.payload;\n            \n        }\n        // todoAdd: {\n        //     reducer: (state, action) => {\n        //          todoAdapter.addOne(state, action.payload)\n        //     },\n        //     prepare: (id, description) => {\n        //         return {payload:{id: id, complete: false, description: description, color: ''}}\n               \n        //     }\n        // },\n        // todoComplete: (state, action) => {\n        //     todoAdapter.updateOne(state, action.payload)\n        // },\n        // todoDelete: (state, action) => {\n        //     todoAdapter.removeOne(state, action.payload)\n        // },\n        // todoAllComplete: (state, action) => {\n        //     const update_arr = state.ids.map((id) => {\n        //             return {id: id, changes: {complete: true}}\n        //         })\n        //     todoAdapter.updateMany(state, update_arr)\n        // },\n        // todoClearComplete: (state, action) => {\n        //     const completeTodoArray = Object.values(state.entities).filter((todo) => todo.complete);\n        //     const completeIds = completeTodoArray.map(todo => todo.id);\n        //     todoAdapter.removeMany(state, completeIds);\n        // },\n        // todoSelect: (state, action) => {\n        //     todoAdapter.updateOne(state, action.payload);\n\n        // },\n        // todoAllUnComplete: (state, action) => {\n        //     const update_arr = state.ids.map((id) => {\n        //         return {id: id, changes: {complete: false}}\n        //     })\n        //     todoAdapter.updateMany(state, update_arr)\n        // }\n        \n    },\n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchTodos.fulfilled, todoAdapter.setAll)\n        .addCase(todoAdd.fulfilled, (state, action) => {\n            todoAdapter.addOne(state,action.payload)\n        })\n        .addCase(todoDelete.fulfilled, (state, action) => {\n            state.open = true;\n            todoAdapter.removeOne(state,action.payload);\n            \n            \n        })\n        .addCase(todoComplete.fulfilled, todoAdapter.updateOne)\n        .addCase(todoAllComplete.fulfilled, (state, action) => {\n            const update_arr = state.ids.map((id) => {\n                return {id: id, changes: {completed: true}}\n            })\n            todoAdapter.updateMany(state, update_arr)\n        })\n        .addCase(todoAllUnComplete.fulfilled, (state, action) => {\n            const update_arr = state.ids.map((id) => {\n                return {id: id, changes: {completed: false}}\n            })\n            todoAdapter.updateMany(state, update_arr)\n        })\n        .addCase(todoClearComplete.fulfilled, (state, action) =>{\n            const completeTodoArray = Object.values(state.entities).filter((todo) => todo.completed);\n            const completeIds = completeTodoArray.map(todo => todo._id);\n            todoAdapter.removeMany(state, completeIds);\n        } )\n        .addCase(todoSelect.fulfilled, todoAdapter.updateOne)\n\n    }\n})\n\n\n\nexport const { todoDeleteSnack } = todoSlice.actions;\n\nexport default todoSlice.reducer;\n\n\nexport const { selectAll, selectById } = todoAdapter.getSelectors((state) => state.todos);\n\n\nexport const selectFilterIds = createSelector(\n    (state) => state,\n    (state) =>{\n        if(state.filters.status === \"All\" && state.filters.colors.length === 0) {\n            return selectTodoIds(state)\n        } else if(state.filters.status === \"UnComplete\"){\n           const arr = selectAll(state).filter((item) => !item.completed && (state.filters.colors.length=== 0 || state.filters.colors.includes(item.color)));\n           return arr.map((item) => item._id)\n        } else if(state.filters.status === \"Complete\"){\n           const arr = selectAll(state).filter((item) => item.completed && (state.filters.colors.length=== 0 || state.filters.colors.includes(item.color)));\n           return arr.map((item) => item._id)\n        } else {\n            const arr = selectAll(state).filter((item) => state.filters.colors.includes(item.color));\n            return arr.map((item) => item._id)\n        }\n    }\n)\n\nexport const selectTodoIds = createSelector(\n    selectAll,\n    (state) => state.map((item) => item._id)\n\n)\n\nexport const selectUnComplete = createSelector(\n    selectAll,\n    (state) => state.filter((state) => !state.completed)\n)\n\n// export const selectTodoDeleteSnack = createSelector(\n//     (state) => state.todos,\n//     state => state.open\n//  )\n\nexport const selectTodoDeleteSnack = (state) => state.todos.open;"]},"metadata":{},"sourceType":"module"}