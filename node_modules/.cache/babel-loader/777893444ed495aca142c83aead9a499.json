{"ast":null,"code":"import{createSelector,createSlice}from\"@reduxjs/toolkit\";export var colors=['blue','orange','yellow','green','red'];export var capatalize=function capatalize(word){if(word!=null|word!=undefined){var str=word.charAt(0).toUpperCase();return str.concat(word.slice(1));}};export var status={all:\"All\",active:\"UnComplete\",complete:\"Complete\"};var initialState={status:status.all,colors:[]};var filterSlice=createSlice({name:'filters',initialState:initialState,reducers:{statusChange:function statusChange(state,action){state.status=action.payload;},colorChange:function colorChange(state,action){if(state.colors.includes(action.payload)){var index=state.colors.indexOf(action.payload);state.colors.splice(index,1);}else{state.colors.push(action.payload);}}}});var _filterSlice$actions=filterSlice.actions,statusChange=_filterSlice$actions.statusChange,colorChange=_filterSlice$actions.colorChange;export{statusChange,colorChange};export default filterSlice.reducer;export var selectStatus=createSelector(function(state){return state.filters;},function(state){return state.status;});","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/to_do_lists/client/src/features/Filter/filterSlice.js"],"names":["createSelector","createSlice","colors","capatalize","word","undefined","str","charAt","toUpperCase","concat","slice","status","all","active","complete","initialState","filterSlice","name","reducers","statusChange","state","action","payload","colorChange","includes","index","indexOf","splice","push","actions","reducer","selectStatus","filters"],"mappings":"AAAA,OAASA,cAAT,CAAyBC,WAAzB,KAA4C,kBAA5C,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,CAAC,MAAD,CAAQ,QAAR,CAAiB,QAAjB,CAA0B,OAA1B,CAAkC,KAAlC,CAAf,CAEP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CACjC,GAAGA,IAAI,EAAI,IAAR,CAAeA,IAAI,EAAIC,SAA1B,CAAqC,CAClC,GAAMC,CAAAA,GAAG,CAAGF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAAZ,CACA,MAAOF,CAAAA,GAAG,CAACG,MAAJ,CAAWL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX,CAAP,CACF,CAEH,CANM,CASP,MAAO,IAAMC,CAAAA,MAAM,CAAG,CACnBC,GAAG,CAAE,KADc,CAEnBC,MAAM,CAAE,YAFW,CAGnBC,QAAQ,CAAE,UAHS,CAAf,CAOP,GAAMC,CAAAA,YAAY,CAAG,CAClBJ,MAAM,CAAEA,MAAM,CAACC,GADG,CAElBV,MAAM,CAAE,EAFU,CAArB,CAKA,GAAMc,CAAAA,WAAW,CAAGf,WAAW,CAAC,CAC7BgB,IAAI,CAAE,SADuB,CAE7BF,YAAY,CAAZA,YAF6B,CAG7BG,QAAQ,CAAE,CACPC,YAAY,CAAE,sBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACT,MAAN,CAAeU,MAAM,CAACC,OAAtB,CACF,CAHM,CAIPC,WAAW,CAAE,qBAACH,KAAD,CAAQC,MAAR,CAAmB,CAC7B,GAAGD,KAAK,CAAClB,MAAN,CAAasB,QAAb,CAAsBH,MAAM,CAACC,OAA7B,CAAH,CAA0C,CACvC,GAAMG,CAAAA,KAAK,CAAGL,KAAK,CAAClB,MAAN,CAAawB,OAAb,CAAqBL,MAAM,CAACC,OAA5B,CAAd,CACAF,KAAK,CAAClB,MAAN,CAAayB,MAAb,CAAoBF,KAApB,CAA0B,CAA1B,EACF,CAHD,IAGO,CACJL,KAAK,CAAClB,MAAN,CAAa0B,IAAb,CAAkBP,MAAM,CAACC,OAAzB,EACF,CACH,CAXM,CAHmB,CAAD,CAA/B,CAoBO,yBAAoCN,WAAW,CAACa,OAAhD,CAAOV,YAAP,sBAAOA,YAAP,CAAqBI,WAArB,sBAAqBA,WAArB,C,iCAEP,cAAeP,CAAAA,WAAW,CAACc,OAA3B,CAGA,MAAO,IAAMC,CAAAA,YAAY,CAAG/B,cAAc,CACvC,SAACoB,KAAD,QAAWA,CAAAA,KAAK,CAACY,OAAjB,EADuC,CAEvC,SAAAZ,KAAK,QAAIA,CAAAA,KAAK,CAACT,MAAV,EAFkC,CAAnC","sourcesContent":["import { createSelector, createSlice } from \"@reduxjs/toolkit\";\n\nexport const colors = ['blue','orange','yellow','green','red'];\n\nexport const capatalize = (word) => {\n   if(word != null | word != undefined) {\n      const str = word.charAt(0).toUpperCase();\n      return str.concat(word.slice(1))   \n   }\n   \n}\n\n\nexport const status = {\n   all: \"All\",\n   active: \"UnComplete\",\n   complete: \"Complete\",\n\n}\n\nconst initialState = {\n   status: status.all,\n   colors: [],\n}\n\nconst filterSlice = createSlice({\n   name: 'filters',\n   initialState,\n   reducers: {\n      statusChange: (state, action) => {\n         state.status = action.payload;\n      },\n      colorChange: (state, action) => {\n         if(state.colors.includes(action.payload)) {\n            const index = state.colors.indexOf(action.payload);\n            state.colors.splice(index,1);\n         } else {\n            state.colors.push(action.payload);\n         }\n      },\n      \n      \n   }\n})\n\nexport const {statusChange, colorChange} = filterSlice.actions;\n\nexport default filterSlice.reducer;\n\n\nexport const selectStatus = createSelector(\n   (state) => state.filters,\n   state => state.status\n)\n\n"]},"metadata":{},"sourceType":"module"}