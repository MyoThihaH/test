{"ast":null,"code":"var _jsxFileName = \"/home/myo/Desktop/javascript/R_eact/memories_pj/client/src/features/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Typography } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from \"@mui/styles\";\nimport { generateId, selectById } from \"../Todo/todoSlice\";\nimport { todoAdd } from \"../Todo/todoSlice\";\nimport { Footer } from \"../Footer/footer\";\nimport { posturl } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  root: {\n    position: \"relative\",\n    left: \"150px\"\n  }\n});\nexport const Header = () => {\n  _s();\n\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const id = useSelector(generateId);\n\n  const changeHandler = e => {\n    setText(e.target.value);\n  }; // const handleRemoveCompletedClick = () => {\n  //   dispatch(todoClearComplete());\n  // }\n  // const handleAllCompleteClick = () => {\n  //   dispatch(todoAllComplete())\n  // }\n\n\n  const handleKeyDown = e => {\n    // If the user pressed the Enter key:\n    const trimmedText = text.trim();\n\n    if (e.which === 13 && trimmedText) {\n      // Dispatch add action creator function \n      dispatch(todoAdd(text)); // And clear out the text input\n\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"To Do Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"Please enter you want to do...\",\n      variant: \"standard\",\n      value: text,\n      onChange: changeHandler,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        overflowWrap: 'break-word'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"2J6PpiiDYImoaFOx1najXblTLtA=\", false, function () {\n  return [useStyle, useDispatch, useSelector];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/memories_pj/client/src/features/Header/Header.js"],"names":["useState","useDispatch","useSelector","Grid","Typography","TextField","makeStyles","generateId","selectById","todoAdd","Footer","posturl","useStyle","root","position","left","Header","classes","dispatch","text","setText","id","changeHandler","e","target","value","handleKeyDown","trimmedText","trim","which","overflowWrap"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAGN,UAAU,CAAC;AAC1BO,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAC,UADL;AAEJC,IAAAA,IAAI,EAAC;AAFD;AADoB,CAAD,CAA3B;AAOA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGL,QAAQ,EAAxB;AACA,QAAMM,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMqB,EAAE,GAAGnB,WAAW,CAACK,UAAD,CAAtB;;AAMA,QAAMe,aAAa,GAAIC,CAAD,IAAO;AACzBH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD,CAXwB,CAexB;AACA;AACA;AAOA;AACA;AACA;;;AAMA,QAAMC,aAAa,GAAKH,CAAD,IAAO;AAC1B;AACA,UAAMI,WAAW,GAAGR,IAAI,CAACS,IAAL,EAApB;;AACA,QAAIL,CAAC,CAACM,KAAF,KAAY,EAAZ,IAAkBF,WAAtB,EAAmC;AACjC;AACAT,MAAAA,QAAQ,CAACT,OAAO,CAACU,IAAD,CAAR,CAAR,CAFiC,CAGjC;;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AAED;AACF,GAVH;;AAcA,sBACA;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACJ,IAAxB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,gCAArC;AAAsE,MAAA,OAAO,EAAC,UAA9E;AAAyF,MAAA,KAAK,EAAEM,IAAhG;AAAsG,MAAA,QAAQ,EAAEG,aAAhH;AAA+H,MAAA,SAAS,EAAEI;AAA1I;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOQ,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACI,QAAAA,YAAY,EAAE;AAAf,OAAnB;AAAA,gBAAkDX;AAAlD;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAaH,CA3DM;;GAAMH,M;UACOJ,Q,EACCX,W,EAGNC,W;;;KALFc,M","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { Grid, Typography } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from \"@mui/styles\";\n\nimport { generateId, selectById } from \"../Todo/todoSlice\";\nimport { todoAdd } from \"../Todo/todoSlice\";\nimport { Footer } from \"../Footer/footer\";\nimport { posturl } from \"../../api/api\";\n\nconst useStyle = makeStyles({\n  root: {\n    position:\"relative\",\n    left:\"150px\"\n  }\n})\n\nexport const Header = () => {\n    const classes = useStyle();\n    const dispatch = useDispatch();\n    \n    const [text, setText] = useState('');\n    const id = useSelector(generateId);\n\n   \n\n   \n    \n    const changeHandler = (e) => {\n        setText(e.target.value);\n    }\n    \n    // const handleRemoveCompletedClick = () => {\n    //   dispatch(todoClearComplete());\n    // }\n\n\n  \n\n    \n\n    // const handleAllCompleteClick = () => {\n    //   dispatch(todoAllComplete())\n    // }\n\n\n\n\n\n    const handleKeyDown =  (e) => {\n        // If the user pressed the Enter key:\n        const trimmedText = text.trim()\n        if (e.which === 13 && trimmedText) {\n          // Dispatch add action creator function \n          dispatch(todoAdd(text));\n          // And clear out the text input\n          setText('')\n          \n        }\n      }\n\n\n      \n    return(\n    <div className={classes.root}>\n        <br/>\n        <Typography variant=\"h3\">To Do Lists</Typography>\n    \n        <TextField id=\"standard-basic\" label=\"Please enter you want to do...\" variant=\"standard\" value={text} onChange={changeHandler} onKeyDown={handleKeyDown} />\n          \n        \n            <Typography style={{overflowWrap: 'break-word'}}>{text}</Typography>\n        \n    \n    </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}