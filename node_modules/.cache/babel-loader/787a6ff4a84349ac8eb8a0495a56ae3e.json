{"ast":null,"code":"import _slicedToArray from\"/home/myo/Desktop/javascript/R_eact/to_do_lists/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{useDispatch,useSelector}from'react-redux';import ToggleButton from'@mui/material/ToggleButton';import ToggleButtonGroup from'@mui/material/ToggleButtonGroup';import{status,statusChange}from\"../Filter/filterSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";export var StatusToggleButton=function StatusToggleButton(){var _useState=useState('All'),_useState2=_slicedToArray(_useState,2),alignment=_useState2[0],setAlignment=_useState2[1];var statusArray=Object.values(status);var dispatch=useDispatch();var handleChange=function handleChange(event,newAlignment){setAlignment(newAlignment);dispatch(statusChange(event.target.value));};var renderButton=function renderButton(arr){return arr.map(function(status){return/*#__PURE__*/_jsx(ToggleButton,{value:status,children:status});});};return/*#__PURE__*/_jsx(ToggleButtonGroup,{color:\"primary\",value:alignment,exclusive:true,onChange:handleChange,children:renderButton(statusArray)});};","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/to_do_lists/client/src/features/Footer/ToggleButton.js"],"names":["useState","useDispatch","useSelector","ToggleButton","ToggleButtonGroup","status","statusChange","StatusToggleButton","alignment","setAlignment","statusArray","Object","values","dispatch","handleChange","event","newAlignment","target","value","renderButton","arr","map"],"mappings":"4IAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,iCAA9B,CAEA,OAASC,MAAT,CAAiBC,YAAjB,KAAqC,uBAArC,C,2CAGA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,cAAkCP,QAAQ,CAAC,KAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACC,MAAP,CAAcP,MAAd,CAApB,CAEA,GAAMQ,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,YAAR,CAAyB,CAC5CP,YAAY,CAACO,YAAD,CAAZ,CACAH,QAAQ,CAACP,YAAY,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAb,CAAR,CACD,CAHD,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAS,CAC5B,MAAOA,CAAAA,GAAG,CAACC,GAAJ,CAAQ,SAAChB,MAAD,CAAW,CAErB,mBAAO,KAAC,YAAD,EAAc,KAAK,CAAEA,MAArB,UAA8BA,MAA9B,EAAP,CAEJ,CAJM,CAAP,CAMF,CAPA,CAUA,mBACE,KAAC,iBAAD,EACE,KAAK,CAAC,SADR,CAEE,KAAK,CAAEG,SAFT,CAGE,SAAS,KAHX,CAIE,QAAQ,CAAEM,YAJZ,UAMGK,YAAY,CAACT,WAAD,CANf,EADF,CAUD,CAhCM","sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nimport { status, statusChange } from \"../Filter/filterSlice\";\n\n\nexport const StatusToggleButton = () => {\n  const [alignment, setAlignment] = useState('All');\n  \n  const statusArray = Object.values(status);\n \n  const dispatch = useDispatch();\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n    dispatch(statusChange(event.target.value));\n  };\n\n  const renderButton = (arr) => {\n    return arr.map((status) =>{\n       \n         return <ToggleButton value={status}>{status}</ToggleButton>\n        \n    } \n    )\n } \n\n\n  return (\n    <ToggleButtonGroup\n      color=\"primary\"\n      value={alignment}\n      exclusive\n      onChange={handleChange}\n    >\n      {renderButton(statusArray)}\n    </ToggleButtonGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}