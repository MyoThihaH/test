{"ast":null,"code":"import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nexport const colors = ['blue', 'orange', 'yellow', 'green', 'red'];\nexport const capatalize = word => {\n  if (word != null | word != undefined) {\n    const str = word.charAt(0).toUpperCase();\n    return str.concat(word.slice(1));\n  }\n};\nexport const status = {\n  all: \"All\",\n  active: \"UnComplete\",\n  complete: \"Complete\"\n};\nconst initialState = {\n  status: status.all,\n  colors: [],\n  open: false\n};\nconst filterSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    statusChange: (state, action) => {\n      state.status = action.payload;\n    },\n    colorChange: (state, action) => {\n      if (state.colors.includes(action.payload)) {\n        const index = state.colors.indexOf(action.payload);\n        state.colors.splice(index, 1);\n      } else {\n        state.colors.push(action.payload);\n      }\n    },\n    todoDeleteSnack: (state, action) => {\n      state.open = action.payload;\n    }\n  }\n});\nexport const {\n  statusChange,\n  colorChange\n} = filterSlice.actions;\nexport default filterSlice.reducer;\nexport const selectStatus = createSelector(state => state.filters, state => state.status);\nexport const selectTodoDeleteSnack = createSelector(state => state.filters, state => state.open);","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/memories_pj/client/src/features/Filter/filterSlice.js"],"names":["createSelector","createSlice","colors","capatalize","word","undefined","str","charAt","toUpperCase","concat","slice","status","all","active","complete","initialState","open","filterSlice","name","reducers","statusChange","state","action","payload","colorChange","includes","index","indexOf","splice","push","todoDeleteSnack","actions","reducer","selectStatus","filters","selectTodoDeleteSnack"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC,MAAD,EAAQ,QAAR,EAAiB,QAAjB,EAA0B,OAA1B,EAAkC,KAAlC,CAAf;AAEP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACjC,MAAGA,IAAI,IAAI,IAAR,GAAeA,IAAI,IAAIC,SAA1B,EAAqC;AAClC,UAAMC,GAAG,GAAGF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAAZ;AACA,WAAOF,GAAG,CAACG,MAAJ,CAAWL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX,CAAP;AACF;AAEH,CANM;AASP,OAAO,MAAMC,MAAM,GAAG;AACnBC,EAAAA,GAAG,EAAE,KADc;AAEnBC,EAAAA,MAAM,EAAE,YAFW;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAAf;AAOP,MAAMC,YAAY,GAAG;AAClBJ,EAAAA,MAAM,EAAEA,MAAM,CAACC,GADG;AAElBV,EAAAA,MAAM,EAAE,EAFU;AAGlBc,EAAAA,IAAI,EAAE;AAHY,CAArB;AAMA,MAAMC,WAAW,GAAGhB,WAAW,CAAC;AAC7BiB,EAAAA,IAAI,EAAE,SADuB;AAE7BH,EAAAA,YAF6B;AAG7BI,EAAAA,QAAQ,EAAE;AACPC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACV,MAAN,GAAeW,MAAM,CAACC,OAAtB;AACF,KAHM;AAIPC,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7B,UAAGD,KAAK,CAACnB,MAAN,CAAauB,QAAb,CAAsBH,MAAM,CAACC,OAA7B,CAAH,EAA0C;AACvC,cAAMG,KAAK,GAAGL,KAAK,CAACnB,MAAN,CAAayB,OAAb,CAAqBL,MAAM,CAACC,OAA5B,CAAd;AACAF,QAAAA,KAAK,CAACnB,MAAN,CAAa0B,MAAb,CAAoBF,KAApB,EAA0B,CAA1B;AACF,OAHD,MAGO;AACJL,QAAAA,KAAK,CAACnB,MAAN,CAAa2B,IAAb,CAAkBP,MAAM,CAACC,OAAzB;AACF;AACH,KAXM;AAYPO,IAAAA,eAAe,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;AAEH;AAfO;AAHmB,CAAD,CAA/B;AAuBA,OAAO,MAAM;AAACH,EAAAA,YAAD;AAAeI,EAAAA;AAAf,IAA8BP,WAAW,CAACc,OAAhD;AAEP,eAAed,WAAW,CAACe,OAA3B;AAGA,OAAO,MAAMC,YAAY,GAAGjC,cAAc,CACtCqB,KAAD,IAAWA,KAAK,CAACa,OADsB,EAEvCb,KAAK,IAAIA,KAAK,CAACV,MAFwB,CAAnC;AAKP,OAAO,MAAMwB,qBAAqB,GAAGnC,cAAc,CAC/CqB,KAAD,IAAWA,KAAK,CAACa,OAD+B,EAEhDb,KAAK,IAAIA,KAAK,CAACL,IAFiC,CAA5C","sourcesContent":["import { createSelector, createSlice } from \"@reduxjs/toolkit\";\n\nexport const colors = ['blue','orange','yellow','green','red'];\n\nexport const capatalize = (word) => {\n   if(word != null | word != undefined) {\n      const str = word.charAt(0).toUpperCase();\n      return str.concat(word.slice(1))   \n   }\n   \n}\n\n\nexport const status = {\n   all: \"All\",\n   active: \"UnComplete\",\n   complete: \"Complete\",\n\n}\n\nconst initialState = {\n   status: status.all,\n   colors: [],\n   open: false\n}\n\nconst filterSlice = createSlice({\n   name: 'filters',\n   initialState,\n   reducers: {\n      statusChange: (state, action) => {\n         state.status = action.payload;\n      },\n      colorChange: (state, action) => {\n         if(state.colors.includes(action.payload)) {\n            const index = state.colors.indexOf(action.payload);\n            state.colors.splice(index,1);\n         } else {\n            state.colors.push(action.payload);\n         }\n      },\n      todoDeleteSnack: (state, action) => {\n         state.open = action.payload;\n         \n     }\n      \n   }\n})\n\nexport const {statusChange, colorChange} = filterSlice.actions;\n\nexport default filterSlice.reducer;\n\n\nexport const selectStatus = createSelector(\n   (state) => state.filters,\n   state => state.status\n)\n\nexport const selectTodoDeleteSnack = createSelector(\n   (state) => state.filters,\n   state => state.open\n)"]},"metadata":{},"sourceType":"module"}