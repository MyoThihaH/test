{"ast":null,"code":"var _jsxFileName = \"/home/myo/Desktop/javascript/R_eact/memories_pj/client/src/features/Todo/Todo.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport '@fontsource/roboto/400.css';\nimport { Grid, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Divider from '@mui/material/Divider';\nimport { selectById } from \"./todoSlice\";\nimport { todoComplete, todoSelect, todoDelete, selectTodoDeleteSnack, todoDeleteSnack } from \"./todoSlice\";\nimport { capatalize, colors } from \"../Filter/filterSlice\";\nimport { ConfirmDialog } from \"../../components/ConfirmDialog\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const TodoId = props.id;\n  const {\n    _id,\n    completed,\n    description,\n    color\n  } = useSelector(state => selectById(state, TodoId));\n  const [open, setOpen] = useState(false);\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCheckOnChange = () => {\n    dispatch(todoComplete({\n      _id: _id,\n      changes: {\n        completed: !completed\n      }\n    }));\n  };\n\n  const colorOptions = colors => {\n    const arr = colors.map(c => {\n      if (c != color) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c,\n          children: capatalize(c)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this);\n      }\n    });\n\n    if (color != \"\") {\n      arr.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this));\n    }\n\n    return arr;\n  };\n\n  const handleDeleteClick = () => {\n    setOpen(true);\n  };\n\n  const handleOnOk = () => {\n    dispatch(todoDelete(_id));\n  };\n\n  const handleColorOnChange = e => {\n    dispatch(todoSelect({\n      _id: _id,\n      changes: {\n        color: e.target.value\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      alignItems: \"center\",\n      wrap: \"nowrap\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        lg: 1,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: completed,\n          onChange: handleCheckOnChange,\n          inputProps: {\n            'aria-label': 'controlled'\n          },\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        lg: 7,\n        zeroMinWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 25,\n          style: {\n            overflowWrap: 'break-word'\n          },\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        lg: 1,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(NativeSelect, {\n            defaultValue: 30,\n            inputProps: {\n              name: 'colors',\n              id: 'uncontrolled-native'\n            },\n            onChange: handleColorOnChange,\n            size: \"20\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: capatalize(color)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), colorOptions(colors)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        lg: 1,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDeleteClick,\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 1,\n        children: /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n          open: open,\n          onClose: () => setOpen(false),\n          onOk: handleOnOk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"PkN9rW84csRADhxIxusSVvMjLG4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/memories_pj/client/src/features/Todo/Todo.js"],"names":["useDispatch","useSelector","Grid","Typography","DeleteIcon","NativeSelect","Checkbox","FormControl","IconButton","Tooltip","Divider","selectById","todoComplete","todoSelect","todoDelete","selectTodoDeleteSnack","todoDeleteSnack","capatalize","colors","ConfirmDialog","useEffect","useState","Todo","props","dispatch","TodoId","id","_id","completed","description","color","state","open","setOpen","snackBarOpen","setSnackBarOpen","handleCheckOnChange","changes","colorOptions","arr","map","c","push","handleDeleteClick","handleOnOk","handleColorOnChange","e","target","value","overflowWrap","name"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,4BAAP;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAGA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,qBAA/C,EAAsEC,eAAtE,QAA6F,aAA7F;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,uBAAnC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAGA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAMyB,MAAM,GAAGF,KAAK,CAACG,EAArB;AACA,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,SAAN;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA;AAA9B,MAAuC7B,WAAW,CAAE8B,KAAD,IAAWpB,UAAU,CAACoB,KAAD,EAAON,MAAP,CAAtB,CAAxD;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAGA,QAAMe,mBAAmB,GAAG,MAAM;AAE9BZ,IAAAA,QAAQ,CAACZ,YAAY,CAAC;AAACe,MAAAA,GAAG,EAACA,GAAL;AAAUU,MAAAA,OAAO,EAAC;AAACT,QAAAA,SAAS,EAAE,CAACA;AAAb;AAAlB,KAAD,CAAb,CAAR;AAED,GAJH;;AAMA,QAAMU,YAAY,GAAIpB,MAAD,IAAY;AAC7B,UAAMqB,GAAG,GAAGrB,MAAM,CAACsB,GAAP,CAAYC,CAAD,IAAO;AAC1B,UAAGA,CAAC,IAAIX,KAAR,EAAe;AACX,4BAAO;AAAQ,UAAA,KAAK,EAAEW,CAAf;AAAA,oBAAmBxB,UAAU,CAACwB,CAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ,KAJW,CAAZ;;AAKA,QAAGX,KAAK,IAAI,EAAZ,EAAe;AACXS,MAAAA,GAAG,CAACG,IAAJ,eAAS;AAAQ,QAAA,KAAK,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,cAAT;AACH;;AACD,WAAOH,GAAP;AACH,GAVD;;AAaA,QAAMI,iBAAiB,GAAG,MAAM;AAC5BV,IAAAA,OAAO,CAAC,IAAD,CAAP;AAED,GAHH;;AAKA,QAAMW,UAAU,GAAG,MAAM;AACrBpB,IAAAA,QAAQ,CAACV,UAAU,CAACa,GAAD,CAAX,CAAR;AAEH,GAHD;;AAKA,QAAMkB,mBAAmB,GAAIC,CAAD,IAAO;AAC/BtB,IAAAA,QAAQ,CAACX,UAAU,CAAC;AAACc,MAAAA,GAAG,EAAEA,GAAN;AAAWU,MAAAA,OAAO,EAAE;AAACP,QAAAA,KAAK,EAAEgB,CAAC,CAACC,MAAF,CAASC;AAAjB;AAApB,KAAD,CAAX,CAAR;AAGD,GAJH;;AAKI,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,UAAU,EAAC,QAAhC;AAAyC,MAAA,IAAI,EAAC,QAA9C;AAAuD,MAAA,cAAc,EAAC,QAAtE;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,+BAEA,QAAC,QAAD;AACA,UAAA,OAAO,EAAEpB,SADT;AAEA,UAAA,QAAQ,EAAEQ,mBAFV;AAGA,UAAA,UAAU,EAAE;AAAE,0BAAc;AAAhB,WAHZ;AAIA,UAAA,IAAI,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,YAAY,MAArC;AAAA,+BACA,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAE,EAAtB;AAA0B,UAAA,KAAK,EAAE;AAACa,YAAAA,YAAY,EAAE;AAAf,WAAjC;AAAA,oBAAgEpB;AAAhE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAeI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,+BACA,QAAC,WAAD;AAAA,iCAEI,QAAC,YAAD;AACI,YAAA,YAAY,EAAE,EADlB;AAEI,YAAA,UAAU,EAAE;AACZqB,cAAAA,IAAI,EAAE,QADM;AAEZxB,cAAAA,EAAE,EAAE;AAFQ,aAFhB;AAMI,YAAA,QAAQ,EAAEmB,mBANd;AAOI,YAAA,IAAI,EAAC,IAPT;AAAA,oCASI;AAAA,wBAAS5B,UAAU,CAACa,KAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,oBATJ,EAUKQ,YAAY,CAACpB,MAAD,CAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgCI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,+BACA,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,QAAf;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAEyB,iBAArB;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAhCJ,eAwCI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACI,QAAC,aAAD;AACI,UAAA,IAAI,EAAEX,IADV;AAEI,UAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAF1B;AAGI,UAAA,IAAI,EAAIW;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAkDA,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH,CAtGM;;GAAMtB,I;UACItB,W,EAE4BC,W;;;KAHhCqB,I","sourcesContent":["\nimport { useDispatch, useSelector } from \"react-redux\"\nimport '@fontsource/roboto/400.css';\nimport { Grid, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Divider from '@mui/material/Divider';\n\n\nimport { selectById } from \"./todoSlice\"\nimport { todoComplete, todoSelect, todoDelete, selectTodoDeleteSnack, todoDeleteSnack } from \"./todoSlice\";\nimport { capatalize, colors } from \"../Filter/filterSlice\";\nimport { ConfirmDialog } from \"../../components/ConfirmDialog\"; \n\nimport { useEffect, useState } from \"react\";\n\n\nexport const Todo = (props) => {\nconst dispatch = useDispatch();\nconst TodoId = props.id;\nconst {_id, completed, description, color} = useSelector((state) => selectById(state,TodoId));\nconst [open, setOpen] = useState(false);\nconst [snackBarOpen, setSnackBarOpen] = useState(false);\n\n\nconst handleCheckOnChange = () => {\n\n    dispatch(todoComplete({_id:_id, changes:{completed: !completed}}));\n    \n  }\n\nconst colorOptions = (colors) => {\n    const arr = colors.map((c) => {\n        if(c != color) {\n            return <option value={c}>{capatalize(c)}</option>\n        }\n    })\n    if(color != \"\"){\n        arr.push(<option value={\"\"}></option>);\n    }\n    return arr;\n}\n\n\nconst handleDeleteClick = () => {\n    setOpen(true);\n    \n  }\n\nconst handleOnOk = () => {\n    dispatch(todoDelete(_id));\n   \n}\n\nconst handleColorOnChange = (e) => {\n    dispatch(todoSelect({_id: _id, changes: {color: e.target.value}}))\n\n\n  }\n    return (\n        <Grid container direction=\"column\">\n        <Grid item container alignItems=\"center\" wrap='nowrap' justifyContent=\"center\">\n            \n            <Grid item xs={1} lg={1}>\n            \n            <Checkbox\n            checked={completed}\n            onChange={handleCheckOnChange}\n            inputProps={{ 'aria-label': 'controlled' }}\n            size='small'\n            />\n            </Grid>\n            <Grid item xs={8} lg={7} zeroMinWidth >\n            <Typography fontSize={25} style={{overflowWrap: 'break-word'}}>{description}</Typography>\n           \n            </Grid>\n            <Grid item xs={2} lg={1} >\n            <FormControl >\n                \n                <NativeSelect\n                    defaultValue={30}\n                    inputProps={{\n                    name: 'colors',\n                    id: 'uncontrolled-native',\n                    }} \n                    onChange={handleColorOnChange}\n                    size='20'\n                >\n                    <option>{capatalize(color)}</option>\n                    {colorOptions(colors)}\n                </NativeSelect>\n            </FormControl>\n            </Grid>\n            <Grid item xs={1} lg={1}>\n            <Tooltip title=\"Delete\">\n                <IconButton onClick={handleDeleteClick}>\n                    <DeleteIcon color=\"primary\"/>\n                </IconButton>\n            </Tooltip>\n            </Grid>\n            \n            <Grid item lg={1}>\n                <ConfirmDialog \n                    open={open} \n                    onClose={() => setOpen(false)} \n                    onOk = {handleOnOk}\n                />\n                \n            </Grid>\n        </Grid>\n        <Grid item container>\n            <Divider variant=\"inset\" />\n            <Grid item lg={2}>\n\n            </Grid>\n        </Grid>\n        </Grid> \n    \n    )\n}"]},"metadata":{},"sourceType":"module"}