{"ast":null,"code":"var _jsxFileName = \"/home/myo/Desktop/javascript/R_eact/memories_pj/client/src/features/Todo/Todo.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport '@fontsource/roboto/400.css';\nimport { Grid, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport { selectById, todoDeleteSnack } from \"./todoSlice\";\nimport { todoComplete, todoSelect, todoDelete } from \"./todoSlice\";\nimport { capatalize, colors } from \"../Filter/filterSlice\";\nimport { ConfirmDialog } from \"../../components/ConfirmDialog\";\nimport { SnackBar } from \"../../components/SnackBar\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const TodoId = props.id;\n  const {\n    _id,\n    completed,\n    description,\n    color\n  } = useSelector(state => selectById(state, TodoId));\n  const [open, setOpen] = useState(false);\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleCheckOnChange = () => {\n    dispatch(todoComplete({\n      _id: _id,\n      changes: {\n        completed: !completed\n      }\n    }));\n  };\n\n  const colorOptions = colors => {\n    const arr = colors.map(c => {\n      if (c != color) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c,\n          children: capatalize(c)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this);\n      }\n    });\n\n    if (color != \"\") {\n      arr.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this));\n    }\n\n    return arr;\n  };\n\n  const handleDeleteClick = () => {\n    setOpen(true);\n  };\n\n  const handleColorOnChange = e => {\n    dispatch(todoSelect({\n      _id: _id,\n      changes: {\n        color: e.target.value\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    wrap: \"nowrap\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      lg: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: completed,\n        onChange: handleCheckOnChange,\n        inputProps: {\n          'aria-label': 'controlled'\n        },\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 7,\n      lg: 5,\n      zeroMinWidth: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fontSize: 25,\n        style: {\n          overflowWrap: 'break-word'\n        },\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      lg: 1,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(NativeSelect, {\n          defaultValue: 30,\n          inputProps: {\n            name: 'colors',\n            id: 'uncontrolled-native'\n          },\n          onChange: handleColorOnChange,\n          size: \"20\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: capatalize(color)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), colorOptions(colors)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      lg: 1,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDeleteClick,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 1,\n      children: [/*#__PURE__*/_jsxDEV(ConfirmDialog, {\n        open: open,\n        onClose: () => setOpen(false),\n        onOk: () => {\n          dispatch(todoDelete(_id));\n          dispatch(todoDeleteSnack(true));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n        color: \"black\",\n        message: \"Success Deleted Item\",\n        open: () => selectTodoDeleteSnack(),\n        autoHideDuration: 4000,\n        onClose: () => dispatch(todoDeleteSnack(false)),\n        backgroundColor: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"PkN9rW84csRADhxIxusSVvMjLG4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/memories_pj/client/src/features/Todo/Todo.js"],"names":["useDispatch","useSelector","Grid","Typography","DeleteIcon","NativeSelect","Checkbox","FormControl","IconButton","Tooltip","selectById","todoDeleteSnack","todoComplete","todoSelect","todoDelete","capatalize","colors","ConfirmDialog","SnackBar","useState","Todo","props","dispatch","TodoId","id","_id","completed","description","color","state","open","setOpen","snackBarOpen","setSnackBarOpen","handleCheckOnChange","changes","colorOptions","arr","map","c","push","handleDeleteClick","handleColorOnChange","e","target","value","overflowWrap","name","selectTodoDeleteSnack"],"mappings":"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","sourcesContent":["\nimport { useDispatch, useSelector } from \"react-redux\"\nimport '@fontsource/roboto/400.css';\nimport { Grid, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\n\n\n\nimport { selectById, todoDeleteSnack } from \"./todoSlice\"\nimport { todoComplete, todoSelect, todoDelete } from \"./todoSlice\";\nimport { capatalize, colors } from \"../Filter/filterSlice\";\nimport { ConfirmDialog } from \"../../components/ConfirmDialog\"; \nimport { SnackBar } from \"../../components/SnackBar\";\nimport { useState } from \"react\";\n\n\nexport const Todo = (props) => {\nconst dispatch = useDispatch();\nconst TodoId = props.id;\nconst {_id, completed, description, color} = useSelector((state) => selectById(state,TodoId));\nconst [open, setOpen] = useState(false);\nconst [snackBarOpen, setSnackBarOpen] = useState(false);\n\nconst handleCheckOnChange = () => {\n\n    dispatch(todoComplete({_id:_id, changes:{completed: !completed}}));\n    \n  }\n\nconst colorOptions = (colors) => {\n    const arr = colors.map((c) => {\n        if(c != color) {\n            return <option value={c}>{capatalize(c)}</option>\n        }\n    })\n    if(color != \"\"){\n        arr.push(<option value={\"\"}></option>);\n    }\n    return arr;\n}\n\n\nconst handleDeleteClick = () => {\n    setOpen(true);\n    \n  }\n\nconst handleColorOnChange = (e) => {\n    dispatch(todoSelect({_id: _id, changes: {color: e.target.value}}))\n\n\n  }\n    return (\n        <Grid container alignItems=\"center\" wrap='nowrap' >\n            <Grid item xs={1} lg={3}/>\n            <Grid item xs={1} >\n            \n            <Checkbox\n            checked={completed}\n            onChange={handleCheckOnChange}\n            inputProps={{ 'aria-label': 'controlled' }}\n            size='small'\n            />\n            </Grid>\n            <Grid item xs={7} lg={5} zeroMinWidth >\n            <Typography fontSize={25} style={{overflowWrap: 'break-word'}}>{description}</Typography>\n           \n            </Grid>\n            <Grid item xs={2} lg={1} >\n            <FormControl >\n                \n                <NativeSelect\n                    defaultValue={30}\n                    inputProps={{\n                    name: 'colors',\n                    id: 'uncontrolled-native',\n                    }} \n                    onChange={handleColorOnChange}\n                    size='20'\n                >\n                    <option>{capatalize(color)}</option>\n                    {colorOptions(colors)}\n                </NativeSelect>\n            </FormControl>\n            </Grid>\n            <Grid item xs={1} lg={1}>\n            <Tooltip title=\"Delete\">\n                <IconButton onClick={handleDeleteClick}>\n                    <DeleteIcon color=\"primary\"/>\n                </IconButton>\n            </Tooltip>\n            </Grid>\n            \n            <Grid item lg={1}>\n                <ConfirmDialog \n                    open={open} \n                    onClose={() => setOpen(false)} \n                    onOk = {() => {\n                        dispatch(todoDelete(_id));\n                        dispatch(todoDeleteSnack(true));\n                        \n                    }\n                } \n                />\n                <SnackBar\n                color=\"black\"\n                message=\"Success Deleted Item\"\n                open={() => selectTodoDeleteSnack()}\n                autoHideDuration={4000}\n                onClose={() => dispatch(todoDeleteSnack(false))}\n                backgroundColor=\"green\"\n                />\n            </Grid>\n            \n        </Grid>\n    \n    )\n}"]},"metadata":{},"sourceType":"module"}