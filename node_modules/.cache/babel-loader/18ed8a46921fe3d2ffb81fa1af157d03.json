{"ast":null,"code":"import _slicedToArray from\"/home/myo/Desktop/javascript/R_eact/to_do_lists/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useDispatch,useSelector}from\"react-redux\";import'@fontsource/roboto/400.css';import{Grid,Typography}from'@mui/material';import DeleteIcon from'@mui/icons-material/Delete';import NativeSelect from'@mui/material/NativeSelect';import Checkbox from'@mui/material/Checkbox';import FormControl from'@mui/material/FormControl';import IconButton from'@mui/material/IconButton';import Tooltip from'@mui/material/Tooltip';import Divider from'@mui/material/Divider';import{selectById}from\"./todoSlice\";import{todoComplete,todoSelect,todoDelete,selectTodoDeleteSnack,todoDeleteSnack}from\"./todoSlice\";import{capatalize,colors}from\"../Filter/filterSlice\";import{ConfirmDialog}from\"../../components/ConfirmDialog\";import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Todo=function Todo(props){var dispatch=useDispatch();var TodoId=props.id;var _useSelector=useSelector(function(state){return selectById(state,TodoId);}),_id=_useSelector._id,completed=_useSelector.completed,description=_useSelector.description,color=_useSelector.color;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),snackBarOpen=_useState4[0],setSnackBarOpen=_useState4[1];var handleCheckOnChange=function handleCheckOnChange(){dispatch(todoComplete({_id:_id,changes:{completed:!completed}}));};var colorOptions=function colorOptions(colors){var arr=colors.map(function(c){if(c!=color){return/*#__PURE__*/_jsx(\"option\",{value:c,children:capatalize(c)});}});if(color!=\"\"){arr.push(/*#__PURE__*/_jsx(\"option\",{value:\"\"}));}return arr;};var handleDeleteClick=function handleDeleteClick(){setOpen(true);};var handleOnOk=function handleOnOk(){dispatch(todoDelete(_id));};var handleColorOnChange=function handleColorOnChange(e){dispatch(todoSelect({_id:_id,changes:{color:e.target.value}}));};return/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,alignItems:\"center\",wrap:\"nowrap\",justifyContent:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:1,lg:1,children:/*#__PURE__*/_jsx(Tooltip,{title:\"Complete\",children:/*#__PURE__*/_jsx(Checkbox,{checked:completed,onChange:handleCheckOnChange,inputProps:{'aria-label':'controlled'},size:\"small\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:8,lg:7,zeroMinWidth:true,children:/*#__PURE__*/_jsx(Typography,{fontSize:25,style:{overflowWrap:'break-word'},children:description})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,lg:1,children:/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsxs(NativeSelect,{defaultValue:30,inputProps:{name:'colors',id:'uncontrolled-native'},onChange:handleColorOnChange,size:\"20\",children:[/*#__PURE__*/_jsx(\"option\",{children:capatalize(color)}),colorOptions(colors)]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1,lg:1,children:/*#__PURE__*/_jsx(Tooltip,{title:\"Delete\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleDeleteClick,children:/*#__PURE__*/_jsx(DeleteIcon,{color:\"primary\"})})})}),/*#__PURE__*/_jsx(Grid,{item:true,lg:1,children:/*#__PURE__*/_jsx(ConfirmDialog,{open:open,onClose:function onClose(){return setOpen(false);},onOk:handleOnOk})})]}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Divider,{variant:\"inset\"})})]});};","map":{"version":3,"sources":["/home/myo/Desktop/javascript/R_eact/to_do_lists/client/src/features/Todo/Todo.js"],"names":["useDispatch","useSelector","Grid","Typography","DeleteIcon","NativeSelect","Checkbox","FormControl","IconButton","Tooltip","Divider","selectById","todoComplete","todoSelect","todoDelete","selectTodoDeleteSnack","todoDeleteSnack","capatalize","colors","ConfirmDialog","useEffect","useState","Todo","props","dispatch","TodoId","id","state","_id","completed","description","color","open","setOpen","snackBarOpen","setSnackBarOpen","handleCheckOnChange","changes","colorOptions","arr","map","c","push","handleDeleteClick","handleOnOk","handleColorOnChange","e","target","value","overflowWrap","name"],"mappings":"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","sourcesContent":["\nimport { useDispatch, useSelector } from \"react-redux\"\nimport '@fontsource/roboto/400.css';\nimport { Grid, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Divider from '@mui/material/Divider';\n\n\n\nimport { selectById } from \"./todoSlice\"\nimport { todoComplete, todoSelect, todoDelete, selectTodoDeleteSnack, todoDeleteSnack } from \"./todoSlice\";\nimport { capatalize, colors } from \"../Filter/filterSlice\";\nimport { ConfirmDialog } from \"../../components/ConfirmDialog\"; \n\nimport { useEffect, useState } from \"react\";\n\n\nexport const Todo = (props) => {\nconst dispatch = useDispatch();\nconst TodoId = props.id;\nconst {_id, completed, description, color} = useSelector((state) => selectById(state,TodoId));\nconst [open, setOpen] = useState(false);\nconst [snackBarOpen, setSnackBarOpen] = useState(false);\n\n\nconst handleCheckOnChange = () => {\n\n    dispatch(todoComplete({_id:_id, changes:{completed: !completed}}));\n    \n  }\n\nconst colorOptions = (colors) => {\n    const arr = colors.map((c) => {\n        if(c != color) {\n            return <option value={c}>{capatalize(c)}</option>\n        }\n    })\n    if(color != \"\"){\n        arr.push(<option value={\"\"}></option>);\n    }\n    return arr;\n}\n\n\nconst handleDeleteClick = () => {\n    setOpen(true);\n    \n  }\n\nconst handleOnOk = () => {\n    dispatch(todoDelete(_id));\n   \n}\n\nconst handleColorOnChange = (e) => {\n    dispatch(todoSelect({_id: _id, changes: {color: e.target.value}}))\n\n\n  }\n    return (\n        <Grid container direction=\"column\">\n        <Grid item container alignItems=\"center\" wrap='nowrap' justifyContent=\"center\">\n            \n            <Grid item xs={1} lg={1}>\n            <Tooltip title=\"Complete\">\n            <Checkbox\n            checked={completed}\n            onChange={handleCheckOnChange}\n            inputProps={{ 'aria-label': 'controlled' }}\n            size='small'\n            />\n            </Tooltip>\n            </Grid>\n            <Grid item xs={8} lg={7} zeroMinWidth >\n            <Typography fontSize={25} style={{overflowWrap: 'break-word'}}>{description}</Typography>\n           \n            </Grid>\n            <Grid item xs={2} lg={1} >\n            <FormControl >\n                \n                <NativeSelect\n                    defaultValue={30}\n                    inputProps={{\n                    name: 'colors',\n                    id: 'uncontrolled-native',\n                    }} \n                    onChange={handleColorOnChange}\n                    size='20'\n                >\n                    <option>{capatalize(color)}</option>\n                    {colorOptions(colors)}\n                </NativeSelect>\n            </FormControl>\n            </Grid>\n            <Grid item xs={1} lg={1}>\n            <Tooltip title=\"Delete\">\n                <IconButton onClick={handleDeleteClick}>\n                    <DeleteIcon color=\"primary\"/>\n                </IconButton>\n            </Tooltip>\n            </Grid>\n            \n            <Grid item lg={1}>\n                <ConfirmDialog \n                    open={open} \n                    onClose={() => setOpen(false)} \n                    onOk = {handleOnOk}\n                />\n                \n            </Grid>\n        </Grid>\n        <Grid item>\n            <Divider variant=\"inset\" />\n        </Grid>\n        </Grid> \n    \n    )\n}"]},"metadata":{},"sourceType":"module"}